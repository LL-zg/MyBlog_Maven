<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.LL.blog.mapper.UserMapper">

  <resultMap id="BaseResultMap" type="com.LL.blog.entity.User">
    <id property="userId" column="user_id" jdbcType="INTEGER"/>
    <result property="userName" column="user_name" jdbcType="VARCHAR"/>
    <result property="userPass" column="user_pass" jdbcType="VARCHAR"/>
    <result property="userNickname" column="user_nickname" jdbcType="VARCHAR"/>
    <result property="userEmail" column="user_email" jdbcType="VARCHAR"/>
    <result property="userUrl" column="user_url" jdbcType="VARCHAR"/>
    <result property="userAvatar" column="user_avatar" jdbcType="VARCHAR"/>
    <result property="userLastLoginIp" column="user_last_login_ip" jdbcType="VARCHAR"/>
    <result property="userRegisterTime" column="user_register_time" jdbcType="VARCHAR"/>
    <result property="userLastLoginTime" column="user_last_login_time" jdbcType="VARCHAR"/>
    <result property="userStatus" column="user_status" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="tb">user</sql>

  <sql id="Base_Column_List">
    user_id,user_name,user_pass,user_nickname,user_email,user_url,user_avatar,user_last_login_ip,user_register_time,user_last_login_time,user_status
  </sql>

  <!--基础的增删改查-->
  <select id="getUserById"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from<include refid="tb"/>
    where user_id=#{userId,javaType=Integer,jdbcType=INTEGER}
  </select>

  <delete id="deleteId" parameterType="java.lang.Integer">
    delete
    from<include refid="tb"/>
    where user_id=#{userId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.LL.blog.entity.User" useGeneratedKeys="true" keyProperty="userId">
    insert into
    <include refid="tb"/>
    (user_id, user_name, user_pass,
    user_nickname, user_email, user_url,
    user_avatar, user_last_login_ip, user_register_time,
    user_last_login_time, user_status)
    value(
    #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR},
    #{userNickname,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userUrl,jdbcType=VARCHAR},
    #{userAvatar,jdbcType=VARCHAR}, #{userLastLoginIp,jdbcType=VARCHAR}, #{userRegisterTime,jdbcType=TIMESTAMP},
    #{userLastLoginTime,jdbcType=TIMESTAMP}, #{userStatus,jdbcType=INTEGER}
    )
  </insert>

  <update id="update" parameterType="com.LL.blog.entity.User">
    update
    <include refid="tb"/>
    <set>
      <if test="userName!=null">user_name=#{userName,jdbcType=VARCHAR},</if>
      <if test="userPass!=null">user_pass=#{userPass,jdbcType=VARCHAR},</if>
      <if test="userNickname!=null">user_nickname=#{userNickname,jdbcType=VARCHAR},</if>
      <if test="userEmail!=null">user_email=#{userEmail,jdbcType=VARCHAR},</if>
      <if test="userUrl!=null">user_url=#{userUrl,jdbcType=VARCHAR},</if>
      <if test="userAvatar!=null">user_avatar=#{userAvatar,jdbcType=VARCHAR},</if>
      <if test="userLastLoginIp!=null">user_last_login_ip=#{userLastLoginIp,jdbcType=VARCHAR},</if>
      <if test="userRegisterTime!=null">user_register_time=#{userRegisterTime,jdbcType=TIMESTAMP},</if>
      <if test="userLastLoginTime!=null">user_last_login_time=#{userLastLoginTime,jdbcType=TIMESTAMP},</if>
      <if test="userStatus!=null">user_status=#{userStatus,jdbcType=INTEGER},</if>
    </set>
    where user_id=#{userId jdbcType=INTEGER}
  </update>

  <!--用户列表的查询-->
  <select id="listUser" parameterType="com.LL.blog.entity.User" resultType="com.LL.blog.entity.User">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="tb"/>
    order by `user_status` ASC
  </select>


  <!--根据用户名或者邮箱查询用户-->
  <select id="getUserByNameOrEmail" parameterType="com.LL.blog.entity.User" resultType="com.LL.blog.entity.User">
         select
         <include refid="Base_Column_List"/>
         from
         <include refid="tb"/>
         <where>
           user_name=#{value} or  user_email=#{value}
         </where>
         and user_status>0
         limit 1
  </select>

  <!--根据用户名查用户-->
  <select id="getUserByName" parameterType="String" resultType="com.LL.blog.entity.User">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="tb"/>
    <where>
      user_name=#{value }
    </where>
    limit 1

  </select>

  <!--根据邮箱查用户-->
  <select id="getUserByEmail" parameterType="String" resultType="com.LL.blog.entity.User">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="tb"/>
    <where>
      user_email=#{value }
    </where>
    limit 1

  </select>
</mapper>